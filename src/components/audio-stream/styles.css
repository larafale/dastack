.audio-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  width: 60px;
  height: 60px;
  background: linear-gradient(to bottom, var(--primary), var(--primary));
  box-shadow: 0 4px 4px rgba(0, 0, 0, .3);
  border-radius: 50%;
  text-align: center;
  text-decoration: none;
  color: white;
  transition: all 0.2s ease;
  overflow: visible;
  z-index: 1;
  transform: translateY(0);
  cursor: default;
}

/* Add press effect when button is actively pressed */
.audio-btn:active {
  transform: none;
  box-shadow: none;
  background: linear-gradient(to bottom, var(--primary), var(--primary));
}

.audio-btn::before {
  display: block;
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: var(--primary);
  opacity: 0;
  content: '';
  animation: none;
  pointer-events: none;
  transition: all 0.2s ease;
}

/* On hover, just show outline instead of animation */
.audio-btn:hover {
  /* box-shadow: none; */
}

/* Change active state appearance when hovering */
.audio-btn:hover:active {
  box-shadow: none;
}

.audio-btn:hover::before {
  /* No animation on hover, just a subtle outline effect */
  animation: none;
  opacity: 0;
  transform: scale(1);
}

/* Change background color when clicked */
.audio-btn.is-clicked {
  background: linear-gradient(to bottom, gray 0%, dimgray 100%);
}

/* Make the button pulse while in recording state */
.audio-btn.is-clicked::before {
  animation: pulse 1.5s infinite;
  opacity: 0.5;
}

/* Blast animation with primary color for click effect */
.audio-btn.blast-animation::before {
  z-index: 9;
  background: var(--primary);
  animation: blastOut 1.2s cubic-bezier(0.17, 0.67, 0.83, 0.67) forwards !important;
}

@keyframes pulse {
  from {
    transform: scale(1);
    opacity: .5;
  }

  to {
    transform: scale(1.3);
    opacity: 0;
  }
}

/* Blast animation */
@keyframes blastOut {
  0% {
    transform: scale(0.9);
    opacity: 0.8;
  }

  20% {
    opacity: 0.7;
  }

  100% {
    transform: scale(20);
    opacity: 0;
  }
}

.audio-btn-container {
  position: relative;
  z-index: 10;
  overflow: visible;
}

/* Add styles for the card hover effect */
.card-hover-effect {
  transition: all 0.2s ease;
  position: relative;
}

/* Apply hover effect to the card */
.card-hover-effect:hover .audio-btn {
  /* box-shadow: 0 0 0 8px hsl(var(--primary)/0.3), 0 4px 8px rgba(0, 0, 0, 0.4); */
}

/* Apply active effect to the card */
.card-hover-effect:active .audio-btn {
  transform: translateY(3px) scale(0.97);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
  background: linear-gradient(to bottom, var(--primary), var(--primary));
}

/* Apply hover+active effect */
.card-hover-effect:hover:active .audio-btn {
  box-shadow: 0 0 0 4px var(--primary)/0.3, 0 1px 3px rgba(0, 0, 0, 0.4);
}

/* Style for the card when recording */
.card-hover-effect.is-recording {
  background-color: rgba(239, 68, 68, 0.05);
  /* box-shadow: 0 0 0 1px rgba(239, 68, 68, 0.1); */
}